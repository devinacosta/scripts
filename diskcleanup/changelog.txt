Changelog for diskcleanup.py
----------------------------
2.0.4   (2025-07-23) ** CRITICAL BUG FIXES - METRICS & ABRT IMPROVEMENTS **
  *** CRITICAL BUG FIXES ***
  * FIXED: ABRT cleanup metrics not being tracked (space freed always showed 0 bytes)
  * FIXED: Operation metrics always showing 0 files/directories processed  
  * FIXED: ABRT directory counting not working in age cleanup phase
  * FIXED: ABRT size cleanup missing dry-run support (always performed live deletions)
  * ENHANCED: Proper synchronization between global metrics and operation context metrics
  * ENHANCED: All cleanup operations now show accurate file counts, directory counts, and duration

  ABRT CLEANUP IMPROVEMENTS:
  * FIXED: delete_old_abrt_directories() now properly tracks directory removal
  * FIXED: delete_abrt_directories_by_size() now supports dry-run mode
  * ENHANCED: ABRT cleanup now shows accurate space freed and directory counts
  
  METRICS TRACKING OVERHAUL:
  * FIXED: File and directory counts now properly synchronized across all operations
  * ENHANCED: Accurate duration tracking for all cleanup phases
  * ENHANCED: Proper metrics accumulation from cleanup functions to operation context

  TEST INFRASTRUCTURE:
  * NEW: generate_test_files.sh - Comprehensive test file generator
  * NEW: cleanup_test_files.sh - Test file cleanup script  
  * NEW: TEST_SCRIPTS_USAGE.md - Complete testing documentation
  * ENHANCED: Validation scripts for all cleanup scenarios (age, size, patterns, ABRT)

2.0.3   (2025-07-23) ** OPERATION ID SIMPLIFICATION - CLEANER FORMAT **
  *** IMPROVED OPERATION ID FORMAT ***
  * ENHANCED: Simplified operation ID format - removed extra underscores
  * ENHANCED: More compact and readable operation IDs
  * ENHANCED: Easier visual scanning in logs

  OPERATION ID FORMAT IMPROVEMENT:
  BEFORE: Extra underscores made IDs longer
    [session_1556_bfd]
    [dir_cleanup_1556_35a]
    [abrt_cleanup_1553_0cd]
  
  AFTER: Compact, clean format
    [session_1556bfd]
    [dir_cleanup_155635a]
    [abrt_cleanup_15530cd]

  BENEFITS:
  * Shorter log lines - less visual clutter
  * Easier to type when searching logs
  * More professional appearance
  * Improved readability in monitoring tools

2.0.2   (2025-07-23) ** MAJOR REFACTORING - MODULAR ARCHITECTURE **
  *** COMPLETE CODE RESTRUCTURING ***
  * NEW: Modular 3-file architecture for better maintainability
  * NEW: diskcleanup_logging.py - Dedicated logging infrastructure module  
  * NEW: diskcleanup_core.py - All business logic and core functions
  * NEW: diskcleanup.py - Clean main script with orchestration logic
  * ENHANCED: Clear separation of concerns across modules
  * ENHANCED: Improved testability with isolated components
  * ENHANCED: Better code organization and readability

  FILE STRUCTURE TRANSFORMATION:
  BEFORE: Single monolithic file
    diskcleanup.py: 1570 lines (everything mixed together)
  
  AFTER: Clean modular architecture
    diskcleanup.py: 299 lines (main script + orchestration)
    diskcleanup_logging.py: 281 lines (logging infrastructure)  
    diskcleanup_core.py: 813 lines (business logic)
    Total: 1393 lines (177 lines saved through optimization)

  MAINTAINABILITY BENEFITS:
  * Individual modules can be tested independently
  * Clear interfaces between components
  * Easier debugging and troubleshooting
  * Better code reusability
  * Simpler team collaboration
  * Focused documentation per module

2.0.1   (2025-07-23) ** LOGGING ENHANCEMENT - CLEAN OPERATION TRACKING **
  *** ENHANCED OPERATION TRACKING ***
  * NEW: Operation IDs now prefixed to EVERY log line for instant visual tracking
  * NEW: Custom OperationIdFormatter and OperationIdRichHandler for dual logging
  * NEW: Thread-local operation context management for nested operations
  * NEW: Simplified operation ID format - much shorter and cleaner
  * NEW: Simplified log messages - removed redundant [SYSTEM][COMPONENT] prefixes
  * ENHANCED: Log format now shows: [operation_id] timestamp LEVEL : clean_message
  * ENHANCED: Easy grep filtering with compact IDs
  * ENHANCED: Visual scanning - related operations grouped together
  * ENHANCED: Console width no longer artificially limited to 100 chars

  OPERATION ID SIMPLIFICATION:
  BEFORE: Verbose, hard to read
    dir_cleanup_143052_a1b2_scanning_3_dirs
    pattern_cleanup_143058_e5f6_scanning_2_pattern_dirs
    session_20250123_143020_a1b2

  AFTER: Clean, simple format
    dir_cleanup_1430_c3d  
    pattern_cleanup_1431_e5f
    session_1430_a1b

  LOG FORMAT IMPROVEMENT:
  BEFORE: Mixed IDs buried in verbose messages - hard to track  
    2025-01-23 14:30:52 INFO : [SYSTEM][CLEANUP] starting dir_cleanup (operation_id: dir_cleanup_143052_c3d4_scanning_3_dirs)

  AFTER: Clean operation IDs + simplified messages at front of every line
    [dir_cleanup_1430_c3d] 2025-01-23 14:30:52 INFO : Starting operation
    [dir_cleanup_1430_c3d] 2025-01-23 14:30:56 INFO : Removed old file /var/log/app.log.old (age_days: 45)

2.0.0   (2025-07-23) ** MAJOR RELEASE - ENTERPRISE EDITION **
  *** COMPLETE LOGGING SYSTEM OVERHAUL ***
  * NEW: LogHelper class with standardized message formatting across all operations
  * NEW: OperationContext class with correlation IDs for tracking complex operations
  * NEW: LogSampler class for intelligent log sampling during high-volume operations
  * NEW: OperationMetrics dataclass for comprehensive performance tracking
  * NEW: Structured error logging with contextual information and error categorization
  * ENHANCED: All log messages now use consistent [SYSTEM][ACTION][DRY-RUN][CONFIG][PERF] formatting
  * ENHANCED: Performance logging with execution times, files processed, and error counts
  * ENHANCED: Log levels properly assigned (DEBUG/INFO/WARNING/ERROR) for better filtering
  * FIXED: Console and file logging now have identical formatting (resolved markup issues)

  *** ADVANCED SYSTEM HEALTH MONITORING ***
  * NEW: Professional before/after system health comparison with visual improvements
  * NEW: Color-coded health status indicators (Good/Caution/Warning/Critical)
  * NEW: Compact health summary display for improved readability
  * NEW: Side-by-side comparison tables showing exactly what was freed and where
  * NEW: Real-time improvement percentage calculations for each mount point
  * ENHANCED: Rich console UI with panels, tables, and professional formatting
  * ENHANCED: Dry-run mode shows potential savings analysis with detailed breakdown

  *** PERFORMANCE & METRICS TRACKING ***
  * NEW: Global metrics aggregation across all cleanup operations
  * NEW: Context managers for automatic operation start/finish logging
  * NEW: Execution time tracking with sub-second precision
  * NEW: Files and directories processed counters with sampling
  * NEW: Progress reporting for large directory operations (every 1000 files)
  * NEW: Error tracking and reporting in final summary
  * ENHANCED: Memory-efficient processing with pathlib.rglob() for directory traversal

  *** ENHANCED USER INTERFACE ***
  * NEW: Professional Rich-based console output with emoji indicators
  * NEW: Summary panels showing key metrics at completion
  * NEW: Color-coded improvements highlighting significant space savings
  * NEW: Clean startup display with current system status
  * ENHANCED: Removed verbose rule separators and redundant health displays
  * ENHANCED: Consolidated information into single, easy-to-read comparison views

  *** CODE QUALITY & ARCHITECTURE ***
  * NEW: CleanupConfig dataclass for structured configuration management
  * NEW: Type hints throughout with Union types and comprehensive annotations
  * NEW: Professional documentation header with features, requirements, and usage
  * NEW: Context managers for safe file operations with proper error handling
  * ENHANCED: Configuration validation with detailed error messages and field checking
  * ENHANCED: Better separation of concerns with logical function grouping
  * FIXED: Replaced unsafe os.system() calls with native Python file operations
  * FIXED: Added missing imports and resolved dependency issues

  *** SECURITY & RELIABILITY ***
  * ENHANCED: Safe file operations with comprehensive exception handling
  * ENHANCED: Configuration validation prevents runtime errors
  * ENHANCED: Permission error handling with graceful degradation
  * ENHANCED: File operation safety with proper context management
  * FIXED: Error propagation and recovery mechanisms

  *** EFFICIENCY IMPROVEMENTS ***
  * OPTIMIZED: Smart log sampling reduces output volume by 80% for large operations
  * OPTIMIZED: Single-pass directory traversal with pathlib for better performance
  * OPTIMIZED: Reduced redundant file system calls and improved I/O efficiency
  * OPTIMIZED: Memory usage improvements for large directory processing
  * OPTIMIZED: Progress tracking prevents UI freezing during long operations

  *** MONITORING & OBSERVABILITY ***
  * NEW: Correlation IDs for tracking related operations across log files
  * NEW: Structured metrics suitable for monitoring tools and automation
  * NEW: Performance baselines and execution time trending capability
  * NEW: Error categorization and detailed error context for debugging
  * ENHANCED: Professional log format suitable for enterprise monitoring systems

1.3.4   (2025-07-18)
  * Added format_size() function to consistently format file sizes in human-readable format
  * Added validate_config() function to verify configuration values before execution
  * Added check_system_health() function to monitor system metrics before/after cleanup
  * Improved logging messages with standardized format and human-readable sizes
  * Added dry-run support for ABRT directory cleanup operations
  * Updated disk space reporting to use consistent units across all operations
  * Added missing docstrings and type hints for better code documentation
  * Reorganized functions into logical sections for better maintainability
  * Added calculation of actual space freed by comparing system health metrics
  * Added email notification with cleanup results
  * Fixed bug in directory cleanup size tracking
  * Added support for file pattern matching in advanced directory cleanup
  * Added better error handling for configuration file parsing
  * Added validation for required configuration sections
1.3.2   (2025-07-10 00:00:00 -700)
  * AI performed some refactoring of code, adding lots of comments.
  * Removed a duplicate function found.
  * Updated requirements.txt to latest PIP3 packages
1.3.0   (2025-02-12 12:00:00 -0700)
  * Added service restart for apps hanging onto deleted open files.
    See diskcleanup.yaml, check_services feature
1.2.6   (2024-02-29 17:00:00 -0700)
  * Fixed bug discovered not deleting files if it finds a ENOENT error.
1.2.5   (2024-02-26 20:00:00 -0700)
  * Fixed issue with Log Path having slashes.
1.2.2   (2024-02-05 12:00:00 -0700)
  * Fixed issue when script was called from another directory.
1.2.1   (2023-09-28 00:00:00 -0700)
  * Added functionality to deal with abrt files.
1.1.1   (2023-09-03 22:38:00 -0700)
  * Added automatic configuration search on startup of script. Will search for config file .yml, .yaml.
  * Added a few more debug fixes and minor updates to script.
  * Added Changelog.txt file to Repository
  * Included WHL files for Python3.6 and Python3.9 for PyYAML.
